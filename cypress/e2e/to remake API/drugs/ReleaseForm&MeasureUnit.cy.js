describe("API Tests for Release Form and Measure Unit", () => {
  before(() => {
    cy.StageRest();
  });

  it("Соотношение действующего вещества и дозировки", () => {
    const token = Cypress.env("access_token");
    const testCases = {
      7464: [7504, 7505, 7506, 7507, 7508, 7509],
      6983: [7504, 7505, 7506, 7507, 7508, 7509],
      6984: [7504, 7505, 7506, 7507, 7508, 7509],
      6998: [7504, 7505, 7506, 7507, 7508, 7509],
      6997: [7504, 7505, 7506, 7507, 7508, 7509],
      6996: [7504, 7505, 7506, 7507, 7508, 7509],
      6995: [7504, 7505, 7506, 7507, 7508, 7509],
      6994: [7504, 7505, 7506, 7507, 7508, 7509],
      6991: [7504, 7505, 7506, 7507, 7508, 7509],
      6990: [7504, 7505, 7506, 7507, 7508, 7509],
      6989: [7504, 7505, 7506, 7507, 7508, 7509],
      6988: [7504, 7505, 7506, 7507, 7508, 7509],
      6987: [7504, 7505, 7506, 7507, 7508, 7509],
      6992: [7504, 7505, 7506, 7507, 7508, 7509],
      6993: [7504, 7505, 7506, 7507, 7508, 7509],
      6986: [7504, 7505, 7506, 7507, 7508, 7509],
      6985: [7504, 7505, 7506, 7507, 7508, 7509],
      6999: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7006: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7005: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7004: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7003: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7002: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7001: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7000: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7007: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7013: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7014: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7016: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7017: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7018: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7015: [7504, 7505, 7506, 7507, 7508, 7509, 7510],
      7495: [7504, 7505, 7506, 7507, 7508, 7509],
      7009: [7504, 7505, 7506, 7507, 7508, 7509],
      7011: [7504, 7505, 7506, 7507, 7508, 7509],
      7012: [7504, 7505, 7506, 7507, 7508, 7509],
      7493: [7504, 7505, 7506, 7507, 7508, 7509],
      7074: [7504, 7505, 7506, 7507, 7508, 7509],
      7010: [7504, 7505, 7506, 7507, 7508, 7509],
      7008: [7504, 7505, 7506, 7507, 7508, 7509],
      7502: [
        7505, 7506, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520,
        7521, 7522, 7523,
      ],
      7492: [
        7505, 7506, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520,
        7521, 7522, 7523,
      ],
      7476: [
        7505, 7506, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520,
        7521, 7522, 7523,
      ],
      7453: [
        7505, 7506, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520,
        7521, 7522, 7523,
      ],
      7455: [
        7505, 7506, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520,
        7521, 7522, 7523,
      ],
      7103: [
        7505, 7506, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520,
        7521, 7522, 7523,
      ],
      7102: [
        7505, 7506, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520,
        7521, 7522, 7523,
      ],
      7099: [
        7505, 7506, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520,
        7521, 7522, 7523,
      ],
      7100: [
        7505, 7506, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520,
        7521, 7522, 7523,
      ],
      7098: [
        7505, 7506, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520,
        7521, 7522, 7523,
      ],
      7101: [
        7505, 7506, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520,
        7521, 7522, 7523,
      ],
      7095: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7097: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7096: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7094: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7478: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7470: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7465: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7093: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7092: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7091: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7090: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7089: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7088: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7087: [7505, 7506, 7511, 7512, 7514, 7516, 7515, 7517, 7521, 7520],
      7086: [7505, 7506, 7511, 7512, 7514, 7515, 7516, 7517, 7521, 7520],
      7459: [7505, 7506, 7511, 7512, 7516, 7517, 7521, 7520],
      7085: [7505, 7506, 7511, 7512, 7516, 7517, 7521, 7520],
      7471: [7505, 7506, 7511, 7512, 7516, 7517, 7521, 7520],
      7496: [7505, 7506, 7511, 7512, 7516, 7517, 7521, 7520, 7515, 7514],
      7454: [7505, 7506, 7511, 7512, 7516, 7517, 7521, 7520, 7515, 7514],
      7452: [7505, 7506, 7511, 7512, 7516, 7517, 7521, 7520, 7515, 7514],
      7451: [7505, 7506, 7511, 7512, 7516, 7517, 7521, 7520, 7515, 7514],
      7450: [7505, 7506, 7511, 7512, 7516, 7517, 7521, 7520, 7515, 7514],
      7031: [7505, 7506, 7512, 7513, 7517, 7516, 7524, 7511, 7526, 7527],
      7022: [7505, 7506, 7512, 7513, 7517, 7516, 7524, 7511, 7526, 7527],
      7033: [7505, 7506, 7512, 7517, 7516, 7511],
      7032: [7505, 7506, 7512, 7517, 7516, 7511],
      7035: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7058: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7057: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7041: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7040: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7039: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7038: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7037: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7036: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7050: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7056: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7055: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7054: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7052: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7051: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7053: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7060: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7059: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7066: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7065: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7064: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7063: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7062: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7061: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7049: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7048: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7047: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7046: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7045: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7044: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7043: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7042: [7505, 7506, 7512, 7528, 7517, 7516, 7524, 7525],
      7109: [7512, 7516, 7517, 7513],
      7107: [7512, 7516, 7517, 7513],
      7108: [7512, 7516, 7517, 7513],
      7106: [7512, 7516, 7517, 7513],
      7112: [7512, 7516, 7517, 7521, 7520, 7526, 7527],
      7111: [7512, 7516, 7517, 7521, 7520, 7526, 7527],
      7491: [7515, 7518, 7519, 7514],
      7485: [7505, 7506, 7512, 7517, 7516, 7524, 7511, 7525],
      7030: [7505, 7506, 7512, 7517, 7516, 7524, 7511, 7525],
      7029: [7505, 7506, 7512, 7517, 7516, 7524, 7511, 7525],
      7026: [7505, 7506, 7512, 7517, 7516, 7524, 7511, 7525],
      7025: [7505, 7506, 7512, 7517, 7516, 7524, 7511, 7525],
      7024: [7505, 7506, 7512, 7517, 7516, 7524, 7511, 7525],
      7020: [7505, 7506, 7512, 7517, 7516, 7524, 7511, 7525],
      7028: [7505, 7506, 7512, 7517, 7516, 7524, 7511, 7525],
      7023: [7505, 7506, 7512, 7517, 7516, 7524, 7511, 7525],
      7027: [7505, 7506, 7512, 7517, 7516, 7524, 7511, 7525],
      7021: [7505, 7506, 7512, 7517, 7516, 7524, 7511, 7525],
    };
    Object.entries(testCases).forEach(([releaseForm, measureUnits]) => {
      measureUnits.forEach((measure_unit_id) => {
        cy.request({
          method: "PUT",
          url: `https://api.base.stage.dorim.com/v1/drugs/50238`,
          headers: {
            Authorization: "Bearer " + token,
            accept: "application/json",
            "Content-Type": "application/json",
          },
          body: {
            is_receipt: false,
            name: "тестовый",
            form: "",
            number: 0,
            blister_count: 0,
            barcode: null,
            barcodes: [],
            vat_id: 43,
            ikpu: 0,
            maker_id: 1234,
            maker_name: "AAPO-SPA naturliche Heilmittel GmbH",
            country_name: "Германия",
            category_id: 6970,
            measure_unit_id: 6978,
            inn_id: 1141,
            class_id: 0,
            record_status_id: 200,
            license_holder_id: 1234,
            release_form_id: releaseForm,
            url_resources: {},
          },
        }).then((response) => {
          const expectedStatus = measureUnits.includes(measure_unit_id)
            ? 200
            : 400;
          expect(response.status).to.eq(expectedStatus);
        });

        cy.request({
          method: "PATCH",
          url: `https://api.base.stage.dorim.com/v1/drugs/50238/dosages`,
          headers: {
            Authorization: "Bearer " + token,
            accept: "application/json",
            "Content-Type": "application/json",
          },
          body: {
            dosages: [
              {
                position: 0,
                inn_id: 1110,
                measure_unit_id: measure_unit_id,
                dosage: 1.23123456,
              },
            ],
          },
        }).then((response) => {
        cy.log(`Отправленные параметры: ${JSON.stringify(dosages)}`);
          const expectedStatus = measureUnits.includes(measure_unit_id)
            ? 204
            : 400;
          expect(response.status).to.eq(expectedStatus);
        });
        cy.request({
          method: "GET",
          url: `https://api.base.stage.dorim.com/v1/drugs/50238`,
          headers: {
            Authorization: "Bearer " + token,
            accept: "application/json",
            "Content-Type": "application/json",
          },
        }).then((response) => {
          const expectedStatus = measureUnits.includes(measure_unit_id)
            ? 200
            : 400;
          expect(response.status).to.eq(expectedStatus);
          cy.log(`${JSON.stringify(response.body)}`);
        });
      });
    });
  });
});
